<?php 
        //print("<pre>".print_r($_POST,true)."</pre>");
        //print("<pre>".print_r($_GET,true)."</pre>");
        function shutdown_function() {
                                global $strFile;
                                $strContent = ob_get_flush();
                                file_put_contents($strFile, $strContent);
				// ugly hack, the html generated by my xslt was imperfect, so first saveHTML converts it to perfect
				// then the div wrapped table is extracted from the dom, and dumped into another file
				$objDom = new DOMDocument();
				$objDom->loadHTML($strContent);
                                $strContent = $objDom->saveHTML();
				$objDom->preserveWhiteSpace = FALSE;
				$objDom->loadHTML($strContent);
				$objElemTable = $objDom->getElementsByTagName('table')->item(0);
				//$objAttribute = $objDom->createAttribute('class');
				//$objAttribute->value = 'hide';
				//$objElemTable->appendChild($objAttribute);
  				include(dirname(dirname(dirname(__FILE__)))."/php/LZW.php");
				$lzw = new LZW();
				$strCompressed = $lzw->compress($objDom->saveHTML($objElemTable));
				$objDiv = $objDom->createElement('div');
				$objAttribute = $objDom->createAttribute('id');
				$objAttribute->value = 'encdata';
				$objDiv->appendChild($objAttribute);
				$objAttribute1 = $objDom->createAttribute('bitoffset');
				$objAttribute1->value = $lzw->getBitCount();
				$objDiv->appendChild($objAttribute1);
				$objDiv->appendChild($objDom->createTextNode($strCompressed));
                                file_put_contents("${strFile}.lzw", $objDom->saveHTML($objDiv));
        }

        function save_xml($arrColumns) {
                global $strFile;
		include(dirname(dirname(dirname(__FILE__)))."/php/LZW.php");
		foreach ($arrColumns  as $key => $value) {
			//error_log(print_r($value, true));
                	file_put_contents("${strFile}.${key}", compress_lzw(join("\n", $value),$key ) );
		}
        }

        function compress_lzw($strToCompress, $strHtmlId) {
		$objDom = new DOMDocument();
		$lzw = new LZW();
		$strCompressed = $lzw->compress($strToCompress);
		$objDiv = $objDom->createElement('div');
		$objAttribute = $objDom->createAttribute('id');
		$objAttribute->value = $strHtmlId;
		$objDiv->appendChild($objAttribute);
		$objAttribute1 = $objDom->createAttribute('bitoffset');
		$objAttribute1->value = $lzw->getBitCount();
		$objDiv->appendChild($objAttribute1);
		$objDiv->appendChild($objDom->createTextNode($strCompressed));
		return $objDom->saveHTML($objDiv);
 
        }

        error_reporting(E_ALL & ~E_NOTICE);
        ini_set('log_errors','1');
        ini_set('display_errors','1');
	include(dirname(dirname(dirname(__FILE__)))."/php/ASTFDatesOptions.php");
        include(dirname(dirname(dirname(__FILE__)))."/php/ASTFRegPreloader.php");
/*
        if (! $blnAccessAllowed) {
            echo "Access forbidden";
                exit;
        }
*/
        $strYear = strftime("%Y");
      	$strEnvironment = "";
      	if (preg_match("/^test/i", $_SERVER["HTTP_HOST"])) $strEnvironment="test";
        // override year if database entry form page Register is clicked, or the first time, if provided as Url
        if  ( isset($_POST['yearregn']) )  {
                // determine which year the registration is intended to be for, assuming year entered to begin with
                $strYear =  $_POST['yearregn'];
                //fest starts midnight of last Friday in March and lasts 3 days. Count any payment after for next year
                $dtmFestEndDate = strtotime("+3 day", strtotime($_POST['yearregn']."-04-01 last Friday")); 
                // 2013 made an exception to festival date rules
                if ($strYear == '2013') $dtmFestEndDate = strtotime('2013-03-24');
                $dtmEarlyBirdDate = strtotime('2013-02-21');
                $dtmRegistrationDate = strtotime("{$_POST['yearregn']}-{$_POST['monthregn']}-{$_POST['dayregn']} 11:59 AM"); 
                if ( $dtmRegistrationDate > $dtmFestEndDate ) {
                        //$strYear =  $_POST['yearregn'] + 1;
                }
                // delete cached file if POST-ing, since this will update the database
                //$strFile= dirname(dirname(__FILE__))."/tmp/cache/".md5($strYear);
                $strFile= dirname(dirname(dirname(__FILE__)))."/tmp/cache/".md5("all".$strEnvironment);
                if (file_exists($strFile)) {
                    unlink($strFile);
                    //$strFile1 = dirname(dirname(__FILE__))."/tmp/cache/".md5("all");
                    //if (file_exists($strFile1)) unlink($strFile1);
                }
        }
        elseif  (isset($_GET['yr']) && strlen($_GET['yr']) > 0 )  {
                $strYear =  $_GET['yr'];
        }
        // at this point year is defined (1 of 3 ways) cache file name  should be too
        if (!isset($strFile)) {
                //$strFile= dirname(dirname(__FILE__))."/tmp/cache/".md5($strYear);
                $strFile= dirname(dirname(dirname(__FILE__)))."/tmp/cache/".md5("all".$strEnvironment);
        }       
                
        if (isset($_GET['id']) && ($_GET['id']=='00d1dc87b40539415edd2fc7679b75cec75c4d57' || 
            $_GET['id']=='00d1dc87b40539415edd2fc7679b75cec75c4d58')) {
                // the cookie for dataEntryPersonID must be sent even if cached output is used, hence the database php must be loaded
                include(dirname(dirname(dirname(__FILE__)))."/php/ASTFDatesOptions.php");
                // At this point, data entry person's ParticipantID should be sent as Cookie
                if (isset($_GET['userid']) && is_numeric($_GET['userid'])) {
			header('Set-Cookie: dataEntryPersonID='.getParticipantIdFromWikiId($_GET['userid']));
		} else {
			echo "<html><head><title>URL parameter missing</title></head><body>Missing userid=arg parameter. Recreate bookmark from wiki</body></html>";
			exit;
		}
		if ($arrTeachers && strpos($_COOKIES['Teachers'],"_") === false) setcookie("Teachers", str_replace(" y ","_",implode(',',$arrTeachers)), time() + (30*86400));
                // it could be argued that the database round trip logic should be only AFTER the transactions are successful
                // === code added to prevent unnecessary trips to the database, faster page serves ====
                // make sure you don't read stale data if you are about to update the database
                if ( (isset($_POST['RegistrationID']) || isset($_POST['ParticipantID'])) && file_exists($strFile) ) unlink($strFile);
                if ( file_exists($strFile) ) {
                        // Output the existing file to the user
                        readfile($strFile);
                        exit();
                } else {
                        // Setup saving and let the page execute:
                        ob_start();
                        register_shutdown_function('shutdown_function');
                }
                // ====== code to speed up page serves ends here ===================

                if (isset($_POST['RegistrationID'])) {
                  //print_r($_POST);
                  $strMailSent = "";
                  if ($_POST['teacher'] && $_POST['Amount'] == "0.00") {
      			if ($strEnvironment=="test") $intRowsAffected = addPrivate();
		  } elseif ( array_key_exists("ActivityType", $_POST) ) {
                	$intRowsAffected = addTransaction();
			if (($_POST['ActivityType'] == 8) && ($intRowsAffected > 0)) { //email when cheque clears
			    $arrRecord = array();
			    $strYear = substr($_POST['RegistrationID'], 0, 4);
			    getOnePerson($_POST['RegistrationID'], '0000', $arrRecord);
			    mail($arrRecord['email'], 
				'Confirmation from Austin Spring Tango '.$strYear, 
				'Hi '.$arrRecord['firstName'].",<br/>Your check was received, and your registration is now confirmed.",
				"MIME-Version: 1.0\r\n"
				."Content-type: text/html; charset=iso-8850-1\r\n"
				."From: astf@austintangosociety.org\r\n"
				."Reply-To: david.boucher@alum.mit.edu\r\n",
				"-fastf@austintangosociety.org");
				
			    $strMailSent = ". Sent email.";
			}
		  }
		  if ($intRowsAffected == 0) {
                    header('Set-Cookie: lastPostResult=Warning: No rows added');
		  } else {
                    header('Set-Cookie: lastPostResult=Success:'. $intRowsAffected.' row(s) added'.$strMailSent);
		  }
                }
                elseif (isset($_POST['ParticipantID'])) {
		  //error_log(print_r($_POST, true));
                  $strMilongaTotal = 0.00;
                  $dblTotal = 0.00;
                  if (!isset($_POST['fullAward'])) {
		    if(isset($_POST['AmtDue'])) {
		      $dblTotal = $_POST['AmtDue'];
		    } else {
                      if ( $dtmRegistrationDate > $dtmEarlyBirdDate) {
                        //$strMilongaTotal = 20.00*count($_POST['milongas']) + ( in_array("Saturday",$_POST['milongas']) ? 5.00 : 0.00);
                        if (isset($_POST['milongas']))
                                $strMilongaTotal = (25.00*count($_POST['milongas'])) 
				+ (( in_array("Saturday",$_POST['milongas']))?10.00:0.00)
				+ (( in_array("Sunday",$_POST['milongas']))?15.00:0.00);
                        if (isset($_POST['classes']))
                                $dblTotal = 35.00*count($_POST['classes']);
                        $dblTotal += (($strMilongaTotal > 125.00) ? 125.00 : $strMilongaTotal);
                        if ($dblTotal > 275.00)
                                $dblTotal = 275.00;
                      } else {
                        if (isset($_POST['milongas']))
                                $strMilongaTotal = (25.00*count($_POST['milongas']))
				+ (( in_array("Saturday",$_POST['milongas']))?10.00:0.00)
				+ (( in_array("Sunday",$_POST['milongas']))?15.00:0.00);
                        if (isset($_POST['classes']))
                                $dblTotal = 30.00*count($_POST['classes']) ;
                        $dblTotal += (($strMilongaTotal > 105.00) ? 105.00 : $strMilongaTotal);
                        if ($dblTotal > 235.00) 
                                $dblTotal = 235.00;
                      }
                      if (isset($_POST['isStudent'])) $dblTotal = $dblTotal * 0.7;
                      if (isset($_POST['groupDiscount'])) $dblTotal = $dblTotal * 0.9;
		    }
		    // Austin Tango Society decided to absorb the 3% fee
                    //if (isset($_POST['payment']) && $_POST['payment'] == 'card') $dblTotal = round($dblTotal * 1.03,2);
                  } else { // full award selected
		    if (count($_POST['milongas']) + count($_POST['classes']) < 1) {
			echo "<html><head><title>Lazy?</title></head><body>Go back select all milongas</body></html>";
			exit;
		    }
		  }
                  try {
                      $arrReturn = writeToDatabase($dblTotal, $strYear, $_GET['opt']);
		      $strRegistrationID = $arrReturn['RegistrationID'];
                      if ($strRegistrationID && (strlen($strRegistrationID) > 0) && !($arrReturn['IsAbortedEventChoicesBad'])) {
                        header('Set-Cookie: lastPostResult=Success: Added '.$strRegistrationID);
                      } else {
			$strCookie = 'Set-Cookie: lastPostResult= ';
			if (strlen($strRegistrationID) == 0) $strCookie .= 'RegistrationID : NONE '; 
			if ($arrReturn['IsAbortedEventChoicesBad']) $strCookie .= 'BadChoices : '.$arrReturn['BadChoices'];
			header($strCookie);
                      }
                  } catch (Exception $e) {
                    header('Set-Cookie: lastPostResult=Error:'.$e->getMessage());
                  }
                }
                else {
                    if (isset($_COOKIE['lastPostResult'])) header('Set-Cookie: lastPostResult=');
                }
               
		$arrColumns = array("Email" => array(), "Phonenumber" => array()); 
                getTable($strYear, $arrColumns);
		save_xml($arrColumns);
		
        } elseif (isset($_GET['id']) && $_GET['id']=='00d1dc87b40539415edd2fc7679b75cec75c4d59'){
                include(dirname(dirname(dirname(__FILE__)))."/php/ASTFDatesOptions.php");
                include(dirname(dirname(dirname(__FILE__)))."/php/ASTFRegPreloader.php");
                //sendInvites();
                // every so often turn this on (i.e. uncomment) to fill in cities from zip codes
                include('ASTFCityFinder.php');
                $arrResults = array();
                getEmptyCityStates($arrResults);
                getCitiesFromZips($arrResults);
                fillEmptyCityStates($arrResults);
                // after writing to the database, refresh the page with new data
                
		$arrColumns = array("Email" => array()); 
                getTable($strYear, $arrColumns);
        } elseif (isset($_GET['id']) && $_GET['id']=='00d1dc87b40539415edd2fc7679b75cec75c4d5A'){
                include(dirname(dirname(dirname(__FILE__)))."/php/ASTFDatesOptions.php");
                echo getPrivateRequests($strYear);
        } else {
                // Make sure that code below does not get executed when we redirect. 
                header( 'Location: http://www.austinspringtango.com/register3.php' );
                exit;
        }

?>
